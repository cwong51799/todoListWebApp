{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","store/database/asynchHandler.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/TodoListCard.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/ItemCard.js","components/list_screen/ItemsList.js","components/list_screen/ListScreen.js","components/list_screen/ItemScreen.js","test/DatabaseTester.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","todoListReducer","rootReducer","combineReducers","auth","todoList","firestore","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","initials","React","Component","compose","firebaseConnect","connect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","uid","RegisterScreen","email","password","firstName","lastName","handleChange","e","target","setState","id","value","handleSubmit","preventDefault","newUser","register","onSubmit","htmlFor","name","onChange","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","catch","registerHandler","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","console","log","loginHandler","TodoListCard","TodoListLinks","i","length","lastAccessed","sort","item1","item2","undefined","reorderByAccessDate","map","key","ordered","HomeScreen","handleNewList","userID","getFirebase","currentUser","get","createNewList","data","userData","add","items","owner","docRef","history","push","firestoreConnect","ItemCard","hideAllOtherButtons","item","myMoveUpHoverBtn","document","getElementsByClassName","myMoveDownHoverBtn","myDeleteHoverBtn","disabled","style","display","MoveUpHoverBtns","MoveDownHoverBtns","DeleteHoverBtns","onMouseOver","revealButtons","pathname","todoItem","newCard","description","assigned_to","due_date","completed","floating","large","waves","icon","children","moveUp","moveDown","deleteItem","ItemsList","sortedBy","update","placeholder","refreshKeys","splice","newItemID","sortByTask","sortByDueDate","sortByStatus","new","ownProps","ListScreen","redirect","markAsMostRecent","delete","Date","toISOString","orderBy","header","trigger","marginRight","actions","flat","handleDeleteList","params","ItemScreen","itemid","itemsArr","addNewCard","updateItem","newItem","getElementById","checked","goBackToListScreen","itemToUpdate","goBack","table","defaultValue","offLabel","onLabel","defaultChecked","submitItem","DatabaseTester","handleClear","fireStore","querySnapshot","forEach","handleReset","todoJson","todoListJson","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.39056c8a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\r\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDtXCMNTjRTzoqJnTb8ZvdN_MPyGOPtIG4\",\r\n    authDomain: \"todo-hw3-34188.firebaseapp.com\",\r\n    databaseURL: \"https://todo-hw3-34188.firebaseio.com\",\r\n    projectId: \"todo-hw3-34188\",\r\n    storageBucket: \"todo-hw3-34188.appspot.com\",\r\n    messagingSenderId: \"1089347511586\",\r\n    appId: \"1:1089347511586:web:565aaeafeca19dedf5b17b\",\r\n    measurementId: \"G-ETXE4PEL7N\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\r\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\r\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\r\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\r\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\r\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\r\n// REDUCER, WHICH ADVANCES STATE\r\n\r\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\n\r\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\r\n\r\nexport function registerSuccess() {\r\n    return { type: 'REGISTER_SUCCESS' }\r\n};\r\nexport function registerError(error) { \r\n    return { type: 'REGISTER_ERROR', error }\r\n};\r\nexport function loginSuccess() {\r\n    return { type: 'LOGIN_SUCCESS' }\r\n};\r\nexport function loginError(error) {\r\n    return { type: 'LOGIN_ERROR', error }\r\n};\r\nexport function logoutSuccess() {\r\n    return { type: 'LOGOUT_SUCCESS' }\r\n};\r\n\r\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\r\nexport function createTodoList(todoList) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST',\r\n        todoList\r\n    }\r\n}\r\nexport function createTodoListError(error) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST_ERROR',\r\n        error\r\n    }\r\n}","import * as actionCreators from '../actions/actionCreators'\r\n\r\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\r\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\r\n// AND RETURN THE NEW, UPDATED STATE\r\n\r\nconst initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionCreators.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: 'Login fail',\r\n      };\r\n    case actionCreators.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case actionCreators.LOGOUT_SUCCESS:\r\n      return state;\r\n    case actionCreators.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case actionCreators.REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    todoLists: []\r\n};\r\n\r\nconst todoListReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};\r\n\r\nexport default todoListReducer;","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from './authReducer';\r\nimport todoListReducer from './todoListReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  todoList: todoListReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { logoutHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoggedInLinks extends React.Component {\r\n\r\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\r\n  handleLogout = () => {\r\n    const { firebase } = this.props;\r\n    this.props.signOut(firebase);\r\n  }\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: firebase => dispatch(logoutHandler(firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(null, mapDispatchToProps),\r\n)(LoggedInLinks);","import * as actionCreators from '../actions/actionCreators.js'\r\n\r\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password,\r\n    ).then(() => {\r\n      console.log(\"LOGIN_SUCCESS\");\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n  };\r\n\r\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\r\n    firebase.auth().signOut().then(() => {\r\n        dispatch(actionCreators.logoutSuccess);\r\n    });\r\n};\r\n\r\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email,\r\n        newUser.password,\r\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\r\n    })).then(() => {\r\n        dispatch(actionCreators.registerSuccess);\r\n    }).catch((err) => {\r\n        dispatch(actionCreators.registerError);\r\n    });\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass LoggedOutLinks extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className = \"right\" >\r\n        <li><NavLink to=\"/register\">Register</NavLink></li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedOutLinks;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport LoggedInLinks from './LoggedInLinks';\r\nimport LoggedOutLinks from './LoggedOutLinks';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    const { auth, profile } = this.props;\r\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\r\n\r\n    return (\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">@todo</Link>\r\n          {links}\r\n        </div>\r\n      </nav>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(Navbar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { registerHandler } from '../../store/database/asynchHandler'\r\n\r\nclass RegisterScreen extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n\r\n    props.register(newUser, firebase);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  authError: state.auth.authError,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(RegisterScreen);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { loginHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoginScreen extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\r\n    // authActions to be authorized by using firebse.auth method\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const credentials = { ...state };\r\n    const authData = {\r\n      firebase,\r\n      credentials,\r\n    };\r\n\r\n    props.login(authData);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\r\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"col s8 banner\">\r\n            @todo<br />\r\n            List Maker\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: authData => dispatch(loginHandler(authData)),\r\n});\r\n\r\n// We need firebaseConnect function to provide to this component\r\n// firebase object with auth method.\r\n// You can find more information on the link below\r\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(LoginScreen);","import React from 'react';\r\n\r\nclass TodoListCard extends React.Component {\r\n\r\n    render() {\r\n        const { todoList } = this.props;\r\n        return (\r\n            <div className=\"card z-depth-0 todo-list-link\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{todoList.name}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoListCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport TodoListCard from './TodoListCard';\r\n\r\nclass TodoListLinks extends React.Component {\r\n    reorderByAccessDate(todoLists){\r\n        for (var i=0;i<todoLists.length;i++){\r\n            if (todoLists.lastAccessed != null){\r\n                continue;\r\n            }\r\n            else{\r\n                todoLists.lastAccessed = \"\";\r\n            }\r\n        }\r\n        todoLists.sort(function(item1,item2){\r\n            if (item1.lastAccessed > item2.lastAccessed){\r\n                return -1;\r\n            }\r\n            if (item1.lastAccessed < item2.lastAccessed){\r\n                return 1;\r\n            }\r\n            else{\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const todoLists = this.props.todoLists;\r\n        if (todoLists !== undefined){\r\n            this.reorderByAccessDate(todoLists);\r\n        }\r\n        return (\r\n            <div className=\"todo-lists section\">\r\n                {todoLists && todoLists.map(todoList => (\r\n                    <Link to={'/todoList/' + todoList.id} key={todoList.id}>\r\n                        <TodoListCard todoList={todoList} />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoLists: state.firestore.ordered.todoLists,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps))(TodoListLinks);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { firestoreConnect, getFirebase } from 'react-redux-firebase';\r\nimport TodoListLinks from './TodoListLinks'\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\n\r\nclass HomeScreen extends Component {\r\n    \r\n    handleNewList = (e) =>{\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var userID= firebase.auth().currentUser.uid;\r\n        firestore.collection('users').doc(userID).get()\r\n        .then(doc => \r\n            this.createNewList(doc.data())\r\n        );\r\n    }\r\n    // Creates a new list under the name of the user.\r\n    // God damn had to go the distance just to get the first name and last name.\r\n    createNewList(userData){\r\n        const firestore = getFirestore();\r\n        var {props} = this;\r\n        firestore.collection('todoLists').add({\r\n            items : [],\r\n            name : \"\",\r\n            owner : userData.firstName + \" \" + userData.lastName,\r\n        }).then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n            props.history.push(\"todoList/\" + docRef.id);\r\n        });\r\n    }\r\n    addNotFirstAttribute(){\r\n        \r\n    }\r\n    render() {\r\n        if (!this.props.auth.uid) {\r\n            console.log(\"You aren't logged in!\");\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m4\">\r\n                        <TodoListLinks />\r\n                    </div>\r\n\r\n                    <div className=\"col s8\">\r\n                        <div className=\"banner\">\r\n                            @todo<br />\r\n                            List Maker\r\n                        </div>\r\n                        \r\n                        <div className=\"home_new_list_container\">\r\n                                <button className=\"home_new_list_button\" onClick={this.handleNewList}>\r\n                                    Create a New To Do List\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'todoLists' },\r\n    ]),\r\n)(HomeScreen);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Icon} from 'react-materialize'\r\n\r\nclass ItemCard extends React.Component {\r\n    revealButtons(){\r\n        /** HIDE ALL OTHER BUTTONS THEN REVEAL THESE */\r\n        this.hideAllOtherButtons();\r\n        const { item } = this.props;  \r\n        var myMoveUpHoverBtn = document.getElementsByClassName(\"moveUpHoverBtn\")[item.id];\r\n        var myMoveDownHoverBtn = document.getElementsByClassName(\"moveDownHoverBtn\")[item.id];\r\n        var myDeleteHoverBtn = document.getElementsByClassName(\"deleteHoverBtn\")[item.id];\r\n        // Only change if it is not disabled. Don't even show the disabled ones.\r\n        if(myMoveUpHoverBtn.disabled === false){\r\n            myMoveUpHoverBtn.style.display = \"block\";\r\n        }\r\n        if(myMoveDownHoverBtn.disabled === false){\r\n            myMoveDownHoverBtn.style.display = \"block\";\r\n        }\r\n        myDeleteHoverBtn.style.display = \"block\";\r\n    }\r\n    hideAllOtherButtons(){ \r\n        var MoveUpHoverBtns = document.getElementsByClassName(\"moveUpHoverBtn\");\r\n        var MoveDownHoverBtns = document.getElementsByClassName(\"moveDownHoverBtn\");\r\n        var DeleteHoverBtns = document.getElementsByClassName(\"deleteHoverBtn\");\r\n        for (var i=0;i<MoveUpHoverBtns.length;i++){\r\n            MoveUpHoverBtns[i].style.display = \"none\";\r\n            MoveDownHoverBtns[i].style.display = \"none\";\r\n            DeleteHoverBtns[i].style.display = \"none\";\r\n        }\r\n    }\r\n    render() {\r\n        const { item ,todoList} = this.props;  \r\n        return (\r\n            <div className = \"itemCard\" onMouseOver={(e)=>this.revealButtons()}>\r\n                <Link to={{\r\n                    pathname: '/todoList/'+ this.props.todoList.id + \"/todoListItem/\" + item.id,\r\n                    state: {\r\n                        todoList : todoList, \r\n                        todoItem : item,\r\n                        newCard : false,\r\n                    }\r\n                }} key={item.id}>\r\n                    <div className=\"card z-depth-0 todo-list-link pink-lighten-3\">\r\n                        <div className=\"card-content grey-text text-darken-3\">\r\n                            <span className=\"card-description\">{item.description}</span>\r\n                            <span className=\"card-assignedTo\">Assigned to:  {item.assigned_to}</span>\r\n                            <span className=\"card-due_Date\">{item.due_date}</span>\r\n                            <div className={item.completed ? 'card-completed' : 'card-not-completed'}>\r\n                            {item.completed ? 'Completed' : 'Pending'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <Button\r\n                    className = \"moveUpHoverBtn\"\r\n                    floating\r\n                    large\r\n                    waves=\"orange\"\r\n                    icon={<Icon children = \"arrow_upward\"/>}\r\n                    onClick = {(e) => this.props.moveUp(item.id, todoList)}\r\n                    disabled = {item.id === 0 ? true : false}\r\n                />\r\n                 <Button\r\n                    className = \"moveDownHoverBtn\"\r\n                    floating\r\n                    large\r\n                    waves=\"yellow\"\r\n                    icon={<Icon children = \"arrow_downward\"/>}\r\n                    onClick = {(e) => this.props.moveDown(item.id, todoList)}\r\n                    disabled = {item.id === todoList.items.length-1 ? true : false}\r\n                />\r\n                 <Button\r\n                    className = \"deleteHoverBtn\"\r\n                    floating\r\n                    large\r\n                    waves=\"red\"\r\n                    icon={<Icon children = \"close\" />}\r\n                    onClick = {(e) => this.props.deleteItem(item.id, todoList)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ItemCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport ItemCard from './ItemCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { firestoreConnect} from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nclass ItemsList extends React.Component {\r\n    state = {\r\n        sortedBy : \"nothing\"\r\n    }\r\n    // Refreshes keys and updates the firestore\r\n    refreshKeys(todoList){\r\n        const items = todoList.items;\r\n        for (var i=0;i<items.length;i++){\r\n            items[i].key = i;\r\n        }\r\n        var firestore = getFirestore();\r\n        firestore.collection(\"todoLists\").doc(todoList.id).update({\r\n            items : items\r\n        });\r\n\r\n    }\r\n    moveUp(id, todoList){\r\n        if (id === 0){\r\n            console.log(\"Cannot move up the first element\");\r\n            return;\r\n        }\r\n        var items = todoList.items;\r\n        var placeholder = items[id-1];\r\n        items[id-1] = items[id];\r\n        items[id] = placeholder;\r\n        this.refreshKeys(todoList);\r\n    }\r\n    moveDown(id, todoList){\r\n        var items = todoList.items;\r\n        if (id === items.length-1){\r\n            console.log(\"Cannot move down the last element\");\r\n            return;\r\n        }\r\n        var placeholder = items[id+1];\r\n        items[id+1] = items[id];\r\n        items[id] = placeholder;\r\n        this.refreshKeys(todoList);\r\n    }\r\n    deleteItem(id, todoList){\r\n        todoList.items.splice(id,1);\r\n        this.refreshKeys(todoList);\r\n    }\r\n\r\n    sortByTask(){\r\n        const todoList = this.props.todoList;\r\n        var items = todoList.items;\r\n        // If it's not currently sorted by ascending task\r\n        if (!(this.state.sortedBy === \"sortByTaskAsc\")){\r\n            items.sort(function(item1,item2){\r\n                if (item1.description > item2.description){\r\n                    return 1;\r\n                }\r\n                else if(item1.description < item2.description){\r\n                    return -1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByTaskAsc\"\r\n            })\r\n        }\r\n        if(this.state.sortedBy === \"sortByTaskAsc\"){\r\n            items.sort(function(item1,item2){\r\n                if (item1.description > item2.description){\r\n                    return -1;\r\n                }\r\n                else if(item1.description < item2.description){\r\n                    return 1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByTaskDesc\"\r\n            })   \r\n        }\r\n        this.refreshKeys(todoList);\r\n    }\r\n    sortByDueDate(){\r\n        const todoList = this.props.todoList;\r\n        var items = todoList.items;\r\n        // If it's not currently sorted by ascending task\r\n        if (!(this.state.sortedBy === \"sortByDueDateAsc\")){\r\n            items.sort(function(item1,item2){\r\n                if (item1.due_date > item2.due_date){\r\n                    return 1;\r\n                }\r\n                else if(item1.due_date < item2.due_date){\r\n                    return -1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByDueDateAsc\"\r\n            })\r\n        }\r\n        if(this.state.sortedBy === \"sortByDueDateAsc\"){\r\n            items.sort(function(item1,item2){\r\n                if (item1.due_date > item2.due_date){\r\n                    return -1;\r\n                }\r\n                else if(item1.due_date < item2.due_date){\r\n                    return 1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByDueDateDesc\"\r\n            })   \r\n        }\r\n        this.refreshKeys(todoList);\r\n    }\r\n    sortByStatus(){\r\n        const todoList = this.props.todoList;\r\n        var items = todoList.items;\r\n        // If it's not currently sorted by ascending task\r\n        if (!(this.state.sortedBy === \"sortByStatusAsc\")){\r\n            items.sort(function(item1,item2){\r\n                if (item1.completed < item2.completed){\r\n                    return 1;\r\n                }\r\n                else if(item1.completed > item2.completed){\r\n                    return -1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByStatusAsc\"\r\n            })\r\n        }\r\n        if(this.state.sortedBy === \"sortByStatusAsc\"){\r\n            items.sort(function(item1,item2){\r\n                if (item1.completed < item2.completed){\r\n                    return -1;\r\n                }\r\n                else if(item1.completed > item2.completed){\r\n                    return 1;\r\n                }\r\n                else return 0;\r\n            });\r\n            this.setState({\r\n                sortedBy : \"sortByStatusDesc\"\r\n            })   \r\n        }\r\n        this.refreshKeys(todoList);\r\n    }\r\n    render() {\r\n        console.log(\"ItemList render called\");\r\n        var todoList = this.props.todoList;\r\n        var refreshKeys = this.refreshKeys;\r\n        var moveUp = this.moveUp;\r\n        var moveDown = this.moveDown;\r\n        var deleteItem = this.deleteItem;\r\n        var items = todoList.items;\r\n        var newItemID = todoList.items.length;\r\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\r\n        return (\r\n            <div className=\"todo-lists section\">\r\n                <div className=\"card-headers\">\r\n                    <div className =\"description-header\" onClick = {(e)=>this.sortByTask()}>Task</div>\r\n                    <div className = \"due_date-header\"  onClick = {(e)=>this.sortByDueDate()}>Due Date</div>\r\n                    <div className =\"status-header\"  onClick = {(e)=>this.sortByStatus()}>Status</div>\r\n                </div>\r\n                {items && items.map(function(item) {\r\n                    item.id = item.key;\r\n                    return (\r\n                        <ItemCard todoList={todoList} item={item} new ={false} refreshKeys = {refreshKeys} \r\n                        moveUp = {moveUp} moveDown = {moveDown} deleteItem = {deleteItem}/>\r\n                    );})\r\n                }\r\n                <Link to={{\r\n                pathname: '/todoList/'+ this.props.todoList.id + \"/todoListItem/\" + newItemID,\r\n                state: {\r\n                    todoList : todoList, \r\n                    todoItem : {description: \"\", assigned_to: \"\", due_date: \"\", completed: false},\r\n                    newCard : true,\r\n                }\r\n                }} key={newItemID}>\r\n                <div className=\"addACardDiv\"><button className=\"addACardBtn\">Add a Card</button></div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const todoList = ownProps.todoList;\r\n    return {\r\n        todoList,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'todoLists' },\r\n    ]),\r\n)(ItemsList);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport ItemsList from './ItemsList.js'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport {Button, Modal} from 'react-materialize'\r\n\r\nclass ListScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.markAsMostRecent();\r\n    }\r\n    todoList = this.props.todoList;\r\n    state = {\r\n        name: this.todoList.name,\r\n        owner: this.todoList.owner,\r\n        redirect: false,\r\n    }\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n        const todoList = this.props.todoList;\r\n        // Name or owner change.\r\n        const firestore = getFirestore();\r\n        if (target.id === \"name\"){\r\n            todoList.name = target.value;\r\n            firestore.collection(\"todoLists\").doc(todoList.id).update({\r\n                name : target.value,\r\n            });\r\n        }else{\r\n            todoList.owner = target.value;\r\n            firestore.collection(\"todoLists\").doc(todoList.id).update({\r\n                owner : target.value,\r\n            });\r\n        }\r\n    }\r\n    handleDeleteList(){\r\n        const firestore = getFirestore();\r\n        var todoList = this.props.todoList;\r\n        this.setState({\r\n            redirect : true,\r\n        })\r\n        firestore.collection(\"todoLists\").doc(todoList.id).delete();\r\n    }\r\n    markAsMostRecent(){\r\n        const firestore = getFirestore();\r\n        var todoList = this.props.todoList;\r\n        firestore.collection(\"todoLists\").doc(todoList.id).update({\r\n            lastAccessed : new Date().toISOString()\r\n        })\r\n        // Sorted it by most recent, but how do I load it by most recent?\r\n        firestore.collection(\"todoLists\").orderBy('lastAccessed');\r\n    }\r\n    render() {\r\n        const auth = this.props.auth;\r\n        const todoList = this.props.todoList;\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (this.state.redirect){\r\n            return <Redirect to='/' />\r\n        }\r\n        // When loaded, move this to the top of the home screen list\r\n        return (\r\n            <div className=\"container\">\r\n                <div className = \"list_header\">\r\n                <Modal id = \"deleteModal\" header=\"Delete List\" trigger={\r\n                    <Button className =\"deleteListBtn\" waves=\"dark\" style={{marginRight: '5px'}}>\r\n                        DELETE LIST\r\n                    </Button>\r\n                }\r\n                    actions = {[<Button className = \"modal-close\" flat> Close </Button>, <Button flat onClick = {(e)=>this.handleDeleteList()}>Confirm</Button>]}> \r\n                    <p>Are you sure you want to delete {todoList.name}? </p>\r\n                    <p><b>This action is irreversible.</b></p>\r\n                 </Modal>\r\n            </div>\r\n                <div className=\"input-field\">Name\r\n                    <label htmlFor=\"email\"></label>\r\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={todoList.name} />\r\n                </div>\r\n                <div className=\"input-field\">Owner\r\n                    <label htmlFor=\"password\"></label> \r\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleChange} value={todoList.owner} />\r\n                </div>\r\n                <ItemsList todoList={todoList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps.match.params;\r\n  const { todoLists } = state.firestore.data;\r\n  const todoList = todoLists ? todoLists[id] : null;\r\n  todoList.id = id;\r\n\r\n  return {\r\n    todoList,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'todoLists' },\r\n  ]),\r\n)(ListScreen);","import React, { Component } from 'react'\r\nimport { getFirestore } from 'redux-firestore';\r\nimport {Switch, Button} from 'react-materialize';\r\n\r\nexport default class ItemScreen extends Component {\r\n    submitItem(){\r\n        var newCard = this.props.location.state.newCard;\r\n        console.log(\"New Card? \" + newCard)\r\n        const firestore = getFirestore();\r\n        const {id,itemid} = this.props.match.params;\r\n        firestore.collection(\"todoLists\").doc(id)\r\n        .get()\r\n        .then(doc => {\r\n            var itemsArr = doc.data().items;\r\n            if (!newCard){\r\n                this.updateItem(itemsArr, id, itemid);\r\n            }\r\n            else{\r\n                this.addNewCard(itemsArr, id, itemid);\r\n            }\r\n        })\r\n    }\r\n    addNewCard(itemsArr,id,itemid){\r\n        var newItem = {description : document.getElementById(\"item_description_textfield\").value,\r\n                        assigned_to : document.getElementById(\"item_assigned_to_textfield\").value,\r\n                        due_date : document.getElementById(\"item_due_date_textfield\").value,\r\n                        completed : document.getElementById(\"item_completedSwitch\").checked,\r\n                        key : itemid,\r\n                        id : itemid,\r\n                        };\r\n        itemsArr.push(newItem);\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"todoLists\").doc(id).update({\r\n            items : itemsArr,\r\n        });\r\n        this.goBackToListScreen();\r\n    }\r\n    updateItem(itemsArr, id, itemid){\r\n        var itemToUpdate = itemsArr[itemid]; \r\n        itemToUpdate.description = document.getElementById(\"item_description_textfield\").value;\r\n        itemToUpdate.assigned_to = document.getElementById(\"item_assigned_to_textfield\").value;\r\n        itemToUpdate.due_date = document.getElementById(\"item_due_date_textfield\").value;\r\n        itemToUpdate.completed = document.getElementById(\"item_completedSwitch\").checked;\r\n        // Updates it and reinserts it into the array. Do I even need to reinsert?\r\n        itemsArr[itemid] = itemToUpdate;\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"todoLists\").doc(id).update({\r\n            items : itemsArr,\r\n        });\r\n        this.goBackToListScreen();\r\n    }\r\n    goBackToListScreen(){\r\n        this.props.history.goBack();\r\n    }\r\n    render() {\r\n        var todoItem = this.props.location.state.todoItem;\r\n        // True or false if it should be empty or not\r\n        var newCard = this.props.location.state.new;\r\n        console.table(todoItem);\r\n        return (\r\n            <div className=\"item_form_container\">\r\n                <div id=\"item_heading\"></div>\r\n                <div className=\"promptInputDiv\"><span className=\"item_prompt\" id=\"item_description_prompt\">Description:</span>\r\n                <input className= \"item_input\" type = \"text\" id=\"item_description_textfield\" defaultValue = {newCard ? \"\" : todoItem.description}/></div>\r\n                <div className=\"promptInputDiv\"><span className=\"item_prompt\" id=\"item_assigned_to_prompt\">Assigned to:</span>\r\n                <input className= \"item_input\" type = \"text\" id=\"item_assigned_to_textfield\" defaultValue = {newCard ? \"\" : todoItem.assigned_to}/></div>\r\n                <div className=\"promptInputDiv\"><span className=\"item_prompt\" id=\"item_due_date_prompt\">Due Date:</span>\r\n                <input className= \"item_input\" type = \"date\" id=\"item_due_date_textfield\" defaultValue = {newCard ? \"\" : todoItem.due_date}/></div>\r\n                <div className=\"promptInputDiv\"><span className=\"item_prompt\" id=\"item_completed_prompt\">Status:</span>\r\n                    <Switch offLabel=\"Pending\" onLabel=\"Complete\" id = \"item_completedSwitch\" defaultChecked = {newCard ? false : todoItem.completed}/> \r\n                </div>\r\n                <div id=\"submitOrCancelDiv\">\r\n                    <Button className= \"submit_button\" type = \"submit\" waves = \"light\" onClick = {(e)=>this.submitItem()}>Submit</Button>\r\n                    <Button className= \"cancel_button\" type = \"cancel\" waves = \"light\" onClick = {(e)=>this.goBackToListScreen()}>Cancel</Button>\r\n                    </div>\r\n            </div>// make these buttons nicer\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport todoJson from './TestTodoListData.json'\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nclass DatabaseTester extends React.Component {\r\n\r\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\r\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\r\n    // TO LOG IN\r\n    handleClear = () => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('todoLists').get().then(function(querySnapshot){\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(\"deleting \" + doc.id);\r\n                fireStore.collection('todoLists').doc(doc.id).delete();\r\n            })\r\n        });\r\n    }\r\n\r\n    handleReset = () => {\r\n        const fireStore = getFirestore();\r\n        todoJson.todoLists.forEach(todoListJson => {\r\n            fireStore.collection('todoLists').add({\r\n                    name: todoListJson.name,\r\n                    owner: todoListJson.owner,\r\n                    items: todoListJson.items\r\n                }).then(() => {\r\n                    console.log(\"DATABASE RESET\");\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleClear}>Clear Database</button>\r\n                <button onClick={this.handleReset}>Reset Database</button>\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        firebase: state.firebase\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DatabaseTester);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\n\r\nimport Navbar from './components/navbar/Navbar.js';\r\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\r\nimport LoginScreen from './components/login_screen/LoginScreen.js';\r\nimport HomeScreen from './components/home_screen/HomeScreen.js';\r\nimport ListScreen from './components/list_screen/ListScreen.js';\r\nimport ItemScreen from './components/list_screen/ItemScreen.js';\r\nimport DatabaseTester from './test/DatabaseTester'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    // if auth is loaded then we render App.\r\n    // But if not then we doesn't render the one.\r\n    if (auth.isLoaded) {\r\n      return (\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomeScreen} />\r\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\r\n              <Route path=\"/register\" component={RegisterScreen} />\r\n              <Route path=\"/login\" component={LoginScreen} />\r\n              <Route path=\"/todoList/:id/todoListItem/:itemid\" component={ItemScreen}/>\r\n              <Route path=\"/todoList/:id\" component={ListScreen} />\r\n              <Route path=\"/:any\" component={HomeScreen} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(App);","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\r\nimport firebase from '../config/firebaseConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from '../App';\r\n\r\nclass ReactReduxFirebaseApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // We enhance compose in order to use Redux DevTools extension\r\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\r\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\r\n        const rrfConfig = {\r\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n            userProfile: 'users',\r\n            attachAuthIsReady: true,\r\n        };\r\n\r\n        const store = createStore(rootReducer,\r\n            composeEnhancers(\r\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\r\n            )\r\n        );\r\n\r\n        const rrfProps = {\r\n            firebase,\r\n            config: rrfConfig,\r\n            dispatch: store.dispatch,\r\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\r\n        };\r\n\r\n        this.state = {\r\n            store: store,\r\n            rrfProps: rrfProps\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={this.state.store}>\r\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\r\n                    <App />\r\n                </ReactReduxFirebaseProvider>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './css/todo_layout.css'\r\nimport './css/todo_style.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\r\n\r\nReactDOM.render(\r\n  <ReactReduxFirebaseApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}